# Generated by Django 5.0.7 on 2025-04-13 20:46

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=50, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="MeasurementUnit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("short_name", models.CharField(max_length=5, unique=True)),
                ("name", models.CharField(max_length=20, unique=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Measurement Unit",
                "verbose_name_plural": "Measurement Units",
                "db_table": "measurement_unit",
            },
        ),
        migrations.CreateModel(
            name="Species",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=20, unique=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Species",
                "verbose_name_plural": "Species",
                "db_table": "species",
            },
        ),
        migrations.CreateModel(
            name="Drug",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=20)),
                ("active_ingredient", models.CharField(max_length=20)),
                (
                    "contraindications",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "measurement_value",
                    models.DecimalField(decimal_places=5, max_digits=10),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "measurement_target",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="drugs",
                        to="core.measurementunit",
                    ),
                ),
                (
                    "species",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="drugs",
                        to="core.species",
                    ),
                ),
            ],
            options={
                "verbose_name": "Drug",
                "verbose_name_plural": "Drugs",
                "db_table": "drug",
            },
        ),
        migrations.CreateModel(
            name="CustomDrug",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=20)),
                ("active_ingredient", models.CharField(max_length=20)),
                (
                    "contraindications",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "measurement_value",
                    models.DecimalField(decimal_places=5, max_digits=10),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_drugs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "measurement_target",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="custom_drugs",
                        to="core.measurementunit",
                    ),
                ),
                (
                    "species",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="custom_drugs",
                        to="core.species",
                    ),
                ),
            ],
            options={
                "verbose_name": "Custom Drug",
                "verbose_name_plural": "Custom Drugs",
                "db_table": "custom_drug",
            },
        ),
        migrations.CreateModel(
            name="SystemLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("log_level", models.CharField(max_length=10)),
                ("message", models.TextField()),
                ("source", models.CharField(max_length=20)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="system_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "System Log",
                "verbose_name_plural": "System Logs",
                "db_table": "system_log",
            },
        ),
        migrations.CreateModel(
            name="TreatmentGuide",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("query", models.TextField()),
                ("result", models.TextField()),
                ("factors", models.JSONField()),
                ("positive_rating", models.PositiveIntegerField(default=0)),
                ("negative_rating", models.PositiveIntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Treatment Guide",
                "verbose_name_plural": "Treatment Guides",
                "db_table": "treatment_guide",
            },
        ),
        migrations.CreateModel(
            name="UserSearchHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("module", models.CharField(max_length=20)),
                ("query", models.TextField()),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="search_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Search History",
                "verbose_name_plural": "User Search Histories",
                "db_table": "user_search_history",
            },
        ),
        migrations.CreateModel(
            name="DrugInteraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("query", models.TextField()),
                ("result", models.TextField()),
                ("context", models.CharField(blank=True, max_length=50, null=True)),
                ("positive_rating", models.PositiveIntegerField(default=0)),
                ("negative_rating", models.PositiveIntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "drugs",
                    models.ManyToManyField(related_name="interactions", to="core.drug"),
                ),
            ],
            options={
                "verbose_name": "Drug Interaction",
                "verbose_name_plural": "Drug Interactions",
                "db_table": "drug_interaction",
                "indexes": [
                    models.Index(
                        fields=["created_at"], name="drug_intera_created_fd9ea5_idx"
                    ),
                    models.Index(
                        fields=["created_by"], name="drug_intera_created_825a7b_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(fields=["name"], name="drug_name_461ac2_idx"),
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(
                fields=["active_ingredient"], name="drug_active__f069be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(fields=["species"], name="drug_species_5e4734_idx"),
        ),
        migrations.AddIndex(
            model_name="customdrug",
            index=models.Index(fields=["name"], name="custom_drug_name_151a4d_idx"),
        ),
        migrations.AddIndex(
            model_name="customdrug",
            index=models.Index(
                fields=["active_ingredient"], name="custom_drug_active__dda8fd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customdrug",
            index=models.Index(
                fields=["user", "species"], name="custom_drug_user_id_806891_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="systemlog",
            index=models.Index(
                fields=["timestamp"], name="system_log_timesta_2209e3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="systemlog",
            index=models.Index(fields=["source"], name="system_log_source_2fd3a3_idx"),
        ),
        migrations.AddIndex(
            model_name="systemlog",
            index=models.Index(
                fields=["log_level"], name="system_log_log_lev_2688fb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="systemlog",
            index=models.Index(fields=["user"], name="system_log_user_id_fcedc2_idx"),
        ),
        migrations.AddIndex(
            model_name="treatmentguide",
            index=models.Index(
                fields=["created_at"], name="treatment_g_created_fedcd1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="treatmentguide",
            index=models.Index(
                fields=["created_by"], name="treatment_g_created_aa3169_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersearchhistory",
            index=models.Index(fields=["user"], name="user_search_user_id_60889e_idx"),
        ),
        migrations.AddIndex(
            model_name="usersearchhistory",
            index=models.Index(fields=["module"], name="user_search_module_77dc4e_idx"),
        ),
        migrations.AddIndex(
            model_name="usersearchhistory",
            index=models.Index(
                fields=["user", "module"], name="user_search_user_id_57075c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersearchhistory",
            index=models.Index(
                fields=["created_at"], name="user_search_created_dbde9f_idx"
            ),
        ),
    ]
