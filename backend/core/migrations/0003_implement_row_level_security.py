# Generated by Django 5.0.7 on 2025-04-13 21:08

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0004_add_postgresql_rls_functions"),
    ]

    def apply_rls(apps, schema_editor):
        if schema_editor.connection.vendor != 'postgresql':
            return

        # Enable RLS on CustomDrug table
        schema_editor.execute("""
            ALTER TABLE custom_drug ENABLE ROW LEVEL SECURITY;

            CREATE POLICY custom_drug_user_isolation ON custom_drug
                FOR ALL
                USING (user_id = current_user_id());
                
            CREATE POLICY custom_drug_admin_access ON custom_drug
                FOR ALL
                USING (current_user_has_role('admin'));
        """)

        # Enable RLS on UserSearchHistory table
        schema_editor.execute("""
            ALTER TABLE user_search_history ENABLE ROW LEVEL SECURITY;

            CREATE POLICY search_history_user_isolation ON user_search_history
                FOR ALL
                USING (user_id = current_user_id());
                
            CREATE POLICY search_history_admin_access ON user_search_history
                FOR ALL
                USING (current_user_has_role('admin'));
        """)

    def reverse_rls(apps, schema_editor):
        if schema_editor.connection.vendor != 'postgresql':
            return

        schema_editor.execute("""
            DROP POLICY IF EXISTS custom_drug_user_isolation ON custom_drug;
            DROP POLICY IF EXISTS custom_drug_admin_access ON custom_drug;
            ALTER TABLE custom_drug DISABLE ROW LEVEL SECURITY;

            DROP POLICY IF EXISTS search_history_user_isolation ON user_search_history;
            DROP POLICY IF EXISTS search_history_admin_access ON user_search_history;
            ALTER TABLE user_search_history DISABLE ROW LEVEL SECURITY;
        """)

    operations = [
        migrations.RunPython(apply_rls, reverse_rls)
    ]
